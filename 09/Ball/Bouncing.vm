function Bouncing.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function Bouncing.bounce 3
push argument 0
pop pointer 0
push this 2
call Ball.getX 1
pop local 0
push this 2
call Ball.getY 1
pop local 1
push this 2
call Ball.getRadius 1
pop local 2
push local 0
push this 0
add
push local 2
add
push constant 511
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push this 0
sub
pop this 0
label IF_FALSE0
push local 1
push this 1
add
push local 2
add
push constant 255
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push this 1
sub
pop this 1
label IF_FALSE1
push local 0
push this 0
add
push local 2
sub
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push this 0
sub
pop this 0
label IF_FALSE2
push local 1
push this 1
add
push local 2
sub
push constant 0
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
push this 1
sub
pop this 1
label IF_FALSE3
push local 0
push this 0
add
pop local 0
push local 1
push this 1
add
pop local 1
push this 2
push local 0
push local 1
push local 2
call Ball.setParam 4
pop temp 0
push this 2
call Ball.draw 1
pop temp 0
push argument 1
call Sys.wait 1
pop temp 0
push this 2
call Ball.erase 1
pop temp 0
push constant 0
return
function Bouncing.controller 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 30
pop local 1
label WHILE_EXP0
push local 2
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
push local 1
call Bouncing.bounce 2
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 2
label IF_FALSE0
push local 0
push constant 90
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
call Ball.decSize 1
pop temp 0
label IF_FALSE1
push local 0
push constant 88
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
call Ball.incSize 1
pop temp 0
label IF_FALSE2
push local 0
push constant 131
eq
push local 1
and
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 1
sub
pop local 1
label IF_FALSE3
push local 0
push constant 133
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 1
add
pop local 1
label IF_FALSE4
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
push local 1
call Bouncing.bounce 2
pop temp 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Bouncing.dispose 0
push argument 0
pop pointer 0
push this 2
call Ball.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
